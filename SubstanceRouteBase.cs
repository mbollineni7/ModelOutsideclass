using System;
using System.ComponentModel;

namespace DSHS.CMBHS.Model 
{
//   <summary>
	// Generated By:   NDesai01 using CMBHS Generator v2.6
	// Schema:         CMBHS_DEV5
	// Date Generated: Wednesday, May 27, 2020
//   
/// Template Name:		CMBHSDomainObject.cs	
/// Template Version:	1.0
/// Template Date:		Dec 19, 2007
///
/// Template Description:
/// 	This template is used to generate
/// 	the base Domain objects for the DSHS.CMBHS.Model
///
/// Base Object Name:        SUBSTANCE_ROUTE
/// Base Object Type:        Table
///
///  Class Information:
/// 	Base ClassName:      AbstractDomainObject
/// 	ClassName:           SubstanceRouteBase
/// 	Name Space Name:     DSHS.CMBHS.Model
///
///  File Information:
/// 	Template File Name:  CMBHSTableDomain
/// 	Class File Name:         SubstanceRouteBase.cs
///
/// Primary Key Name	PrimaryKeyColumnName 
/// SUBSTANCE_ROUTE_PK VALUE_NBR
///   </summary>

	public class SubstanceRouteBase : AbstractDomainObject
	{

		#region Table data Accessors

		public enum Code : short
		{
			Injection = 1,
			NasalInhalation = 2,
			Oral = 3,
			Smoking = 4,
			Unknown = 5,
			Other = 6,
			NASAL = 7,
			NONINTRAVENOUS = 8,
			Iv = 9
		}

		public static short MapDescription(string value)
		{
			if (value.ToLower().CompareTo("injection") == 0)
			return (short)Code.Injection;
			if (value.ToLower().CompareTo("nasal inhalation") == 0)
			return (short)Code.NasalInhalation;
			if (value.ToLower().CompareTo("oral") == 0)
			return (short)Code.Oral;
			if (value.ToLower().CompareTo("smoking") == 0)
			return (short)Code.Smoking;
			if (value.ToLower().CompareTo("unknown") == 0)
			return (short)Code.Unknown;
			if (value.ToLower().CompareTo("other") == 0)
			return (short)Code.Other;
			if (value.ToLower().CompareTo("nasal") == 0)
			return (short)Code.NASAL;
			if (value.ToLower().CompareTo("non-intravenous (iv) injection") == 0)
			return (short)Code.NONINTRAVENOUS;
			if (value.ToLower().CompareTo("iv") == 0)
			return (short)Code.Iv;
			return 0;
		}

		public static string GetDescription(Code value)
		{
			if(value == Code.Injection)
				return "Injection";
			if(value == Code.NasalInhalation)
				return "Nasal Inhalation";
			if(value == Code.Oral)
				return "Oral";
			if(value == Code.Smoking)
				return "Smoking";
			if(value == Code.Unknown)
				return "Unknown";
			if(value == Code.Other)
				return "Other";
			if(value == Code.NASAL)
				return "Nasal";
			if(value == Code.NONINTRAVENOUS)
				return "Non-intravenous (IV) injection";
			if(value == Code.Iv)
				return "IV";
			return string.Empty;
		}

		public static string GetValueCode(Code value)
		{
			if(value == Code.Injection)
				return "UNKWN";
			if(value == Code.NasalInhalation)
				return "ORAL";
			if(value == Code.Oral)
				return "NI";
			if(value == Code.Smoking)
				return "SMK";
			if(value == Code.Unknown)
				return "INJ";
			if(value == Code.Other)
				return "OTH";
			if(value == Code.NASAL)
				return "";
			if(value == Code.NONINTRAVENOUS)
				return "";
			if(value == Code.Iv)
				return "";
			return string.Empty;
		}

		#endregion Table data Accessors

		#region Table Attribute Accessors

		/// <summary>
		/// PrimaryKey property accessor
		/// </summary>
		[System.Xml.Serialization.XmlIgnore]
		public virtual String PrimaryKey{ get; set; }

		/// <summary>
		/// ValueNbr property accessor
		/// </summary>
		[CustomAttribute.Comment("This field is the tracking number of the code table record.")]
		public virtual short ValueNbr{ get; set;}

		/// <summary>
		/// ValueAbbrv property accessor
		/// </summary>
		[CustomAttribute.Comment("This field is the abbreviation of the code table record.                                       ")]
		public virtual string ValueAbbrv{ get; set;}

		/// <summary>
		/// ValueDescription property accessor
		/// </summary>
		[CustomAttribute.Comment("This field is the description of the code table record.")]
		public virtual string ValueDescription{ get; set;}

		/// <summary>
		/// CreatedBy property accessor
		/// </summary>
		[CustomAttribute.Comment("This is the tracking number of the person who created the record. This field can be associated with the PERSON table to obtain additional information about the person who created the record.")]
		public virtual int CreatedBy{ get; set;}

		/// <summary>
		/// CreatedDate property accessor
		/// </summary>
		[CustomAttribute.Comment("Date record was created.")]
		public virtual DateTime CreatedDate{ get; set;}

		/// <summary>
		/// UpdatedBy property accessor
		/// </summary>
		[CustomAttribute.Comment("This is the tracking number of the person who updated the record. This field can be associated with the PERSON table to obtain additional information about the person who updated the record.                                        ")]
		public virtual int UpdatedBy{ get; set;}

		/// <summary>
		/// UpdatedDate property accessor
		/// </summary>
		[CustomAttribute.Comment("Date record was updated.")]
		public virtual DateTime UpdatedDate{ get; set;}

		/// <summary>
		/// ValueCode property accessor
		/// </summary>
		[CustomAttribute.Comment("This field is a code that is used for automated data exchange.")]
		public virtual string ValueCode{ get; set;}

		/// <summary>
		/// EffectiveDate property accessor
		/// </summary>
		[CustomAttribute.Comment("This is the effective date of the code table record.")]
		public virtual DateTime EffectiveDate{ get; set;}

		/// <summary>
		/// ExpirationDate property accessor
		/// </summary>
		[CustomAttribute.Comment("This is the expiration date (if applicable) of the code table record.")]
		public virtual DateTime ExpirationDate{ get; set;}
		#endregion Table Attribute Accessors
	}
}
