using System;
using System.ComponentModel;

namespace DSHS.CMBHS.Model 
{
//   <summary>
	// Generated By:   LAsgummala01 using CMBHS Generator v2.6
	// Schema:         CMBHS_DEV2
	// Date Generated: Monday, June 29, 2020
//   
/// Template Name:		CMBHSDomainObject.cs	
/// Template Version:	1.0
/// Template Date:		Dec 19, 2007
///
/// Template Description:
/// 	This template is used to generate
/// 	the base Domain objects for the DSHS.CMBHS.Model
///
/// Base Object Name:        SU_ASMT_PRESENTING_PROB
/// Base Object Type:        Table
///
///  Class Information:
/// 	Base ClassName:      AbstractDomainObject
/// 	ClassName:           SuAsmtPresentingProblemBase
/// 	Name Space Name:     DSHS.CMBHS.Model
///
///  File Information:
/// 	Template File Name:  CMBHSTableDomain
/// 	Class File Name:         SuAsmtPresentingProblemBase.cs
///
/// Primary Key Name	PrimaryKeyColumnName 
/// SUASMT_PRESENTINGPROB_PK SU_ASMT_PRESENTING_PROB_NBR
///   </summary>

	public class SuAsmtPresentingProblemBase : AbstractDomainObject
	{

		#region Table Attribute Accessors

		/// <summary>
		/// PrimaryKey property accessor
		/// </summary>
		[System.Xml.Serialization.XmlIgnore]
		public virtual String PrimaryKey{ get; set; }

		/// <summary>
		/// SuAsmtPresentingProbNbr property accessor
		/// </summary>
		[CustomAttribute.Comment("Primary Key - Unique row identifier.")]
		public virtual int SuAsmtPresentingProbNbr{ get; set;}

		/// <summary>
		/// SuAssessmentNbr property accessor
		/// </summary>
		[CustomAttribute.Comment("Unique row identifier for SU_ASSESSMENT table.")]
		[CustomAttribute.ReferencedClass("DSHS.CMBHS.Model.SuAssessmentBase,DSHS.CMBHS.Model")]
		public virtual int SuAssessmentNbr{ get; set;}

		// Used by XmlSerializer when serialized. We use a special pattern to create a Boolean field recognized
		// by the XmlSerializer, and to apply the XmlIgnoreAttribute to the field. The pattern is created in the
		// form of propertyNameSpecified. For example, if there is a field named "MyFirstName" you would also
		// create a field named "MyFirstNameSpecified" that instructs the XmlSerializer whether to generate the
		// XML element named "MyFirstName". We use this for all nullable properties. This will cause the property
		// to not render as an XmlElement (otherwise value types like short would render an element's text as -32768).
		[System.Xml.Serialization.XmlIgnore]
		public virtual bool SuAssessmentNbrSpecified
		{
			get { return SuAssessmentNbr != int.MinValue; }
		}


		/// <summary>
		/// PresentingProblemType property accessor
		/// </summary>
		[CustomAttribute.Comment("Presenting problem type like primari, secondary or tertiary.")]
		[CustomAttribute.ReferencedClass("DSHS.CMBHS.Model.PresentingProblemTypeBase,DSHS.CMBHS.Model")]
		public virtual short PresentingProblemType{ get; set;}

		/// <summary>
		/// SubstanceType property accessor
		/// </summary>
		[CustomAttribute.Comment("What Substances have you been using?")]
		[CustomAttribute.ReferencedClass("DSHS.CMBHS.Model.SubstanceBase,DSHS.CMBHS.Model")]
		public virtual short SubstanceType{ get; set;}

		// Used by XmlSerializer when serialized. We use a special pattern to create a Boolean field recognized
		// by the XmlSerializer, and to apply the XmlIgnoreAttribute to the field. The pattern is created in the
		// form of propertyNameSpecified. For example, if there is a field named "MyFirstName" you would also
		// create a field named "MyFirstNameSpecified" that instructs the XmlSerializer whether to generate the
		// XML element named "MyFirstName". We use this for all nullable properties. This will cause the property
		// to not render as an XmlElement (otherwise value types like short would render an element's text as -32768).
		[System.Xml.Serialization.XmlIgnore]
		public virtual bool SubstanceTypeSpecified
		{
			get { return SubstanceType != short.MinValue; }
		}


		/// <summary>
		/// RouteOfAdministration property accessor
		/// </summary>
		[CustomAttribute.Comment("Route of Administration.")]
		[CustomAttribute.ReferencedClass("DSHS.CMBHS.Model.SubstanceRouteBase,DSHS.CMBHS.Model")]
		public virtual short RouteOfAdministration{ get; set;}

		// Used by XmlSerializer when serialized. We use a special pattern to create a Boolean field recognized
		// by the XmlSerializer, and to apply the XmlIgnoreAttribute to the field. The pattern is created in the
		// form of propertyNameSpecified. For example, if there is a field named "MyFirstName" you would also
		// create a field named "MyFirstNameSpecified" that instructs the XmlSerializer whether to generate the
		// XML element named "MyFirstName". We use this for all nullable properties. This will cause the property
		// to not render as an XmlElement (otherwise value types like short would render an element's text as -32768).
		[System.Xml.Serialization.XmlIgnore]
		public virtual bool RouteOfAdministrationSpecified
		{
			get { return RouteOfAdministration != short.MinValue; }
		}


		/// <summary>
		/// FrequencyOfUse property accessor
		/// </summary>
		[CustomAttribute.Comment("Frequency of Use.")]
		[CustomAttribute.ReferencedClass("DSHS.CMBHS.Model.FrequencyBase,DSHS.CMBHS.Model")]
		public virtual short FrequencyOfUse{ get; set;}

		// Used by XmlSerializer when serialized. We use a special pattern to create a Boolean field recognized
		// by the XmlSerializer, and to apply the XmlIgnoreAttribute to the field. The pattern is created in the
		// form of propertyNameSpecified. For example, if there is a field named "MyFirstName" you would also
		// create a field named "MyFirstNameSpecified" that instructs the XmlSerializer whether to generate the
		// XML element named "MyFirstName". We use this for all nullable properties. This will cause the property
		// to not render as an XmlElement (otherwise value types like short would render an element's text as -32768).
		[System.Xml.Serialization.XmlIgnore]
		public virtual bool FrequencyOfUseSpecified
		{
			get { return FrequencyOfUse != short.MinValue; }
		}


		/// <summary>
		/// AgeAtFirstUse property accessor
		/// </summary>
		[CustomAttribute.Comment("Age of First Substance Use.")]
		[CustomAttribute.ReferencedClass("DSHS.CMBHS.Model.AgeRangeBase,DSHS.CMBHS.Model")]
		public virtual short AgeAtFirstUse{ get; set;}

		// Used by XmlSerializer when serialized. We use a special pattern to create a Boolean field recognized
		// by the XmlSerializer, and to apply the XmlIgnoreAttribute to the field. The pattern is created in the
		// form of propertyNameSpecified. For example, if there is a field named "MyFirstName" you would also
		// create a field named "MyFirstNameSpecified" that instructs the XmlSerializer whether to generate the
		// XML element named "MyFirstName". We use this for all nullable properties. This will cause the property
		// to not render as an XmlElement (otherwise value types like short would render an element's text as -32768).
		[System.Xml.Serialization.XmlIgnore]
		public virtual bool AgeAtFirstUseSpecified
		{
			get { return AgeAtFirstUse != short.MinValue; }
		}


		/// <summary>
		/// CreatedBy property accessor
		/// </summary>
		[CustomAttribute.Comment("This is the tracking number of the person who created the record. This field can be associated with the PERSON table to obtain additional information about the person who created the record.")]
		[CustomAttribute.ReferencedClass("DSHS.CMBHS.Model.PersonBase,DSHS.CMBHS.Model")]
		public virtual int CreatedBy{ get; set;}

		/// <summary>
		/// CreatedDate property accessor
		/// </summary>
		[CustomAttribute.Comment("Date record was created.")]
		public virtual DateTime CreatedDate{ get; set;}

		/// <summary>
		/// UpdatedBy property accessor
		/// </summary>
		[CustomAttribute.Comment("This is the tracking number of the person who updated the record. This field can be associated with the PERSON table to obtain additional information about the person who updated the record.")]
		[CustomAttribute.ReferencedClass("DSHS.CMBHS.Model.PersonBase,DSHS.CMBHS.Model")]
		public virtual int UpdatedBy{ get; set;}

		/// <summary>
		/// UpdatedDate property accessor
		/// </summary>
		[CustomAttribute.Comment("Date record was updated.")]
		public virtual DateTime UpdatedDate{ get; set;}

		/// <summary>
		/// AgeAtFirstUseNum property accessor
		/// </summary>
		[CustomAttribute.Comment("This is to record the substance first use age from 0 to 99")]
		public virtual short AgeAtFirstUseNum{ get; set;}

		// Used by XmlSerializer when serialized. We use a special pattern to create a Boolean field recognized
		// by the XmlSerializer, and to apply the XmlIgnoreAttribute to the field. The pattern is created in the
		// form of propertyNameSpecified. For example, if there is a field named "MyFirstName" you would also
		// create a field named "MyFirstNameSpecified" that instructs the XmlSerializer whether to generate the
		// XML element named "MyFirstName". We use this for all nullable properties. This will cause the property
		// to not render as an XmlElement (otherwise value types like short would render an element's text as -32768).
		[System.Xml.Serialization.XmlIgnore]
		public virtual bool AgeAtFirstUseNumSpecified
		{
			get { return AgeAtFirstUseNum != short.MinValue; }
		}

		#endregion Table Attribute Accessors
	}
}
